// prisma/schema.prisma
datasource db {
  provider = "sqlite" // in futuro potremo sostituirlo con "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  nome      String
  cognome   String
  email     String   @unique
  password  String
  telefono  String?  // pu√≤ essere nullo
  sesso     String?  // aggiunto, usato in /register
  dataNascita DateTime?
  citta     String?
  comune    String?
  tipo      String   // utente / professionista
  documento String?
  documentoVerificato Boolean @default(false)
  fotoProfilo String?

  // nuovi campi
  isActive        Boolean  @default(true)
  emailVerificata Boolean  @default(false)
  ruolo           String   @default("user") // coerente con server.js
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  consensi  Consenso[]
  reset     PasswordReset[]
  chat      Chat[]
}

model Consenso {
  id            Int      @id @default(autoincrement())
  utenteId      Int
  privacyPolicy Boolean
  cookiePolicy  Boolean
  timestamp     DateTime @default(now())

  utente User @relation(fields: [utenteId], references: [id])
}

model PasswordReset {
  id        Int      @id @default(autoincrement())
  utenteId  Int
  token     String   @unique
  expiresAt DateTime

  utente User @relation(fields: [utenteId], references: [id])
}

model Chat {
  id        Int      @id @default(autoincrement())
  utenteId  Int
  messaggio String
  risposta  String
  timestamp DateTime @default(now())

  utente User @relation(fields: [utenteId], references: [id])
}
